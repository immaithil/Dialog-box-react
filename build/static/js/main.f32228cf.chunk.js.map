{"version":3,"sources":["components/graph.js","components/loadingImage.js","components/Dialogue.js","App.js","reportWebVitals.js","index.js"],"names":["Graph","BarChart","rd3","className","src","alt","Loading","Dialogue","props","onClick","setShowD","showD","setShowLoad","showLoad","setTimeout","setShowGraph","showGraph","App","useState","id","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"4PAYgBA,EATH,WACT,IAAMC,EAAUC,IAAID,SACpB,OACK,gCACI,cAACA,EAAD,IACA,qBAAKE,UAAU,QAAQC,IAAI,mEAAmEC,IAAI,cCUhGC,EAhBA,WAMX,OACI,8BACI,qBAAKH,UAAU,SAASC,IAAI,+BAA+BC,IAAI,eCoB5DE,EA1BA,SAACC,GAeZ,OACI,sBAAKL,UAAU,SAAf,UACI,qBAAKA,UAAU,YAAYC,IAAI,qHAAqHC,IAAI,aACxJ,sBAAKF,UAAU,UAAf,UACA,wBAAQA,UAAU,QAAQM,QAhBf,WACfD,EAAME,UAAUF,EAAMG,OACrBH,EAAMI,aAAaJ,EAAMK,UACzBC,YAAW,WACPN,EAAMI,aAAY,KACpB,MAWC,kBACA,wBAAQT,UAAU,QAAQM,QAVjB,WACbD,EAAME,UAAUF,EAAMG,OACzBH,EAAMO,cAAcP,EAAMQ,YAQnB,0BCkBGC,MApCf,WACE,MAA0BC,oBAAS,GAAnC,mBAAOP,EAAP,KAAcD,EAAd,KAMA,EAAgCQ,oBAAS,GAAzC,mBAAOL,EAAP,KAAiBD,EAAjB,KAEA,EAAkCM,oBAAS,GAA3C,mBAAOF,EAAP,KAAkBD,EAAlB,KAGA,OACE,gCAEE,qBAAKZ,UAAU,aACbC,IAAI,qHACJC,IAAI,SAEN,wBAAQF,UAAU,QAAQgB,GAAG,QAAQV,QAjBtB,WAChBC,GAAUC,GACVC,GAAY,GACZG,GAAa,IAcZ,sBACCJ,GACC,cAAC,EAAD,CACEA,MAAOA,EACPD,SAAUA,EACVM,UAAWA,EACXD,aAAcA,EACdF,SAAUA,EACVD,YAAaA,IAGhBI,GAAa,cAAC,EAAD,IACbH,GAAY,cAAC,EAAD,QCzBJO,EAZS,SAAAC,GAClBA,GAAeA,aAAuBC,UACxC,6BAAqBC,MAAK,YAAkD,IAA/CC,EAA8C,EAA9CA,OAAQC,EAAsC,EAAtCA,OAAQC,EAA8B,EAA9BA,OAAQC,EAAsB,EAAtBA,OAAQC,EAAc,EAAdA,QAC3DJ,EAAOH,GACPI,EAAOJ,GACPK,EAAOL,GACPM,EAAON,GACPO,EAAQP,OCDdQ,IAASC,OACP,cAAC,IAAMC,WAAP,UACE,cAAC,EAAD,MAEFC,SAASC,eAAe,SAM1Bb,M","file":"static/js/main.f32228cf.chunk.js","sourcesContent":["import React from \"react\";\r\nimport rd3 from 'react-d3-library'\r\n\r\nconst Graph= ()=>{\r\n    const BarChart= rd3.BarChart;\r\n    return(\r\n         <div>\r\n             <BarChart />\r\n             <img className='graph' src=\"https://storage.googleapis.com/fplsblog/1/2020/04/line-graph.png\" alt='graph'></img>\r\n         </div>\r\n    )\r\n}\r\nexport  default Graph;","import React from \"react\";\r\n\r\nconst Loading= ()=>{\r\n   \r\n \r\n   // clearTimeout(loop,7000)\r\n   \r\n\r\n    return(\r\n        <div>\r\n            <img className='loader' src=\"https://i.gifer.com/WMDx.gif\" alt='loading'></img>\r\n           \r\n        </div>\r\n    )\r\n}\r\n\r\n\r\n\r\nexport default Loading","import React, {useState} from \"react\";\r\nimport Graph from \"./graph\";\r\nimport Loading from \"./loadingImage\";\r\n\r\nconst Dialogue=(props)=>{\r\n    \r\n\r\n    const loadingStart=()=>{\r\n        props.setShowD(!props.showD)\r\n         props.setShowLoad(!props.showLoad)\r\n         setTimeout(()=>{\r\n             props.setShowLoad(false)\r\n         },7000)\r\n    }\r\n    const graphStart=()=>{\r\n        props.setShowD(!props.showD)\r\n     props.setShowGraph(!props.showGraph)\r\n    }\r\n\r\n    return(\r\n        <div className='dialog'>\r\n            <img className='dia-image' src='https://upload.wikimedia.org/wikipedia/en/thumb/3/3c/Chris_Hemsworth_as_Thor.jpg/220px-Chris_Hemsworth_as_Thor.jpg' alt='new Thor'></img>\r\n            <div className='buttons'>\r\n            <button className='batan' onClick={loadingStart}>Load</button>\r\n            <button className='batan' onClick={graphStart}>Graph</button>\r\n           </div>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default Dialogue;","import React, { useState } from \"react\";\nimport \"./App.css\";\nimport Dialogue from \"./components/Dialogue\";\nimport Loading from \"./components/loadingImage\";\nimport Graph from \"./components/graph\";\n\nfunction App() {\n  const [showD, setShowD] = useState(false);\n  const showDialog = () => {\n     setShowD(!showD);\n     setShowLoad(false);\n     setShowGraph(false);\n  };\n  const [showLoad, setShowLoad] = useState(false);\n  \n  const [showGraph, setShowGraph] = useState(false);\n  \n  \n  return (\n    <div>\n    \n      <img className='main-image'\n        src=\"https://upload.wikimedia.org/wikipedia/en/thumb/3/3c/Chris_Hemsworth_as_Thor.jpg/220px-Chris_Hemsworth_as_Thor.jpg\"\n        alt=\"thor\"\n      ></img>\n      <button className='batan' id='click' onClick={showDialog}>Click Me</button>\n      {showD && (\n        <Dialogue\n          showD={showD}\n          setShowD={setShowD}\n          showGraph={showGraph}\n          setShowGraph={setShowGraph}\n          showLoad={showLoad}\n          setShowLoad={setShowLoad}\n        />\n      )}\n      {showGraph && <Graph />}\n      {showLoad && <Loading />}\n    </div>\n  );\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}